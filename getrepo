#!/bin/bash -i

# if first passed argument is empty, then
if [ -z $1 ]; then
echo "what repo???"
read repo
else
repo=$1
fi

echo getting $repo

# if the repo has already been downloaded...
if [ -d ./$repo/ ]; then
echo "this repo already exists..."
echo "remove with:"
echo "rm -rf $repo"
echo
exit
fi

url="https://github.com/suchdatums/$repo"
git clone --recurse-submodules --remote-submodules $url

# TODO 
# how can I recurse into every subdir and delete the .git file?
# can can I do this safely without destorying any project I may be working on?
# I only want to go into the DOWNLOADED submodules and delete the .git folder... hmmm.
rm -rf ./$repo/.git
rm ./$repo/.gitignore

# echo
# echo "RUN SETUP SCRIPT?"
# echo "type yes if yes"
# read inp
# if [ $inp != "yes" ]; then
# exit
# fi
# chmod +x ./$repo/SETUP_$repo
# ./$repo/SETUP_$repo

# loop through every non-hidden file in directory
cd $repo
for FILE in *; do
    # if first line has '#!' in it...
    if [ $(head -n 1 FILE) == *"#!"* ]; then
        # made executable
        chmod +x FILE
done

echo
echo "DO YOU WANT TO INSTALL IN THE HOME FOLDER?"
echo "type yes if yes"
read inp
if [ $inp != "yes" ]; then
exit
fi
cd ~
cp -rf ./$repo/* .
rm -r ./$repo/
